Dotfile repository, to be used with [[https://www.gnu.org/software/stow/][GNU Stow]].

Pretty much everything in here depends on ~base~. The font used is ~Fira Code~.
Shell code indicates setup steps.

* Package specific instructions
** base
Basic system tools configuration such as ~tmux~, ~git~, ~gnupg~, and ~ssh~, as well as programming language conveniences
- Complete system upgrade via ~topgrade~
- Dependencies:
  - [[https://github.com/tmux-plugins/tpm][TPM]], [[https://github.com/tmuxinator/tmuxinator][tmuxinator]], ~fortune~, ~topgrade~
  - ~most~ for paging, [[https://metacpan.org/pod/Term::ReadKey][Term::ReadKey]] for git's interactive.singleKey
  - ~ruby~ (for tmuxinator), ~xsel~ (for ~tmux-yank~), ~xdg-open~ (for ~tmux-open~)

** Bash
- Drop-in setup for login (interactive) shells via executable scripts in ~$HOME/.profile.d~ (~$HOME/.shrc.d~)
- Dependencies: ~thefuck~

** appconfig
- Dependencies: ~aria2~

** Emacs
- tmux integration starts server when window is created
- ~M-x package-refresh-contents RET~ ~M-x package-install-selected-packages RET~
- Expects the following repos in ~$HOME/src/emacs/~:
#+BEGIN_SRC sh
$ git clone -b master https://github.com/emacsmirror/emacswiki.org.git ~/src/emacs/emacswiki.org
$ git clone https://github.com/hrs/sensible-defaults.el.git ~/src/emacs/sensible-defaults.el
$ git clone https://github.com/tom-tan/hlinum-mode.git ~/src/emacs/hlinum-mode
#+END_SRC

** Elinks
- Key binds and session resume
- Autostart through tmux

** XConfig
- Provides ~redshiftd.service~, ~udiskied.service~ and ~xss-deactivate.timer~
- Starts ~xscreensaver~, ~udiskie~, ~redshift~ and ~picom~
- Configured to start XMonad in ~.xinitrc~
- Setup in ~$HOME/.xprofile~ and executable scripts in ~$HOME/.xprofile.d~
- Dependencies: ~xscreensaver~, ~udiskie~, ~redshift~, ~picom~, ~zenity~, ~gtx-solarc-theme~ (for zenity theming), ~imwheel~, ~solaar~
- Set up with some local compose key binds as well as a lot from a shared repo
#+BEGIN_SRC sh
$ git clone https://github.com/kragen/xcompose.git ~/src/repos/xcompose
#+END_SRC

** xmonad
#+BEGIN_SRC sh
$ (cd ~; cabal install xmonad)
#+END_SRC
The cabal invocation gets the xmonad executable so we can use ~xmonad --recompile~ from then on
- No xmonad-specific setup neends to be done before starting the binary (it configures the background, tray and xmobar itself)
- Enable --user dunst.service
- Dependencies:
  - cabal-install >3.0.1.0
  - xmobar with ~+with_xft +with_utf8~ flags:
#+BEGIN_SRC sh
$ git clone https://github.com/jaor/xmobar.git ~/src/repos/xmobar
$ (cd ~/src/repos/xmobar; cabal configure -f "+with_xft +with_utf8"; cabal install)
#+END_SRC
  - xmobar info scripts: ~ddate~, ~amixer~, ~mpc~, ~sensors~, ~nvidia-smi~ (from ~nvidia-utils~) for nvidia graphics cards
  - Integration: ~dunst~, ~stalonetray~, ~xvkbd~, ~xzoom~, ~maim~

** MPD
- Enable --user mpd.service (or start explicitly)
- ~bin/mpd_gen_playlists.zsh~ to create playlists for directories in mpd music library; respects an ~mpd_exclude.txt~ file there

** terminals
- Configuration of terminal emulators, currently ~xfce4-terminal~ and ~alacritty~

* Language environments
** Rust
- Dependencies: ~rustup~ (with sources), ~clippy~, ~rustfmt~
** Go
#+BEGIN_SRC sh
$ mkdir -p ~/.go
#+END_SRC
- Dependencies: ~go~
** Haskell
#+BEGIN_SRC sh
$ git clone https://github.com/haskell/cabal.git ~/src/repos/cabal
#+END_SRC
